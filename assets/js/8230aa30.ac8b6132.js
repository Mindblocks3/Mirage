"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[8848],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>p});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=a.createContext({}),o=function(e){var r=a.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},d=function(e){var r=o(e.components);return a.createElement(c.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},u=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=o(t),p=n,f=u["".concat(c,".").concat(p)]||u[p]||m[p]||i;return t?a.createElement(f,l(l({ref:r},d),{},{components:t})):a.createElement(f,l({ref:r},d))}));function p(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,l=new Array(i);l[0]=u;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var o=2;o<i;o++)l[o]=t[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},28010:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var a=t(87462),n=(t(67294),t(3905));const i={id:"HeadlessFrameLimiter",title:"HeadlessFrameLimiter"},l="Class HeadlessFrameLimiter",s={unversionedId:"reference/Mirage/HeadlessFrameLimiter",id:"reference/Mirage/HeadlessFrameLimiter",title:"HeadlessFrameLimiter",description:"Inheritance",source:"@site/docs/reference/Mirage/HeadlessFrameLimiter.md",sourceDirName:"reference/Mirage",slug:"/reference/Mirage/HeadlessFrameLimiter",permalink:"/Mirage/docs/reference/Mirage/HeadlessFrameLimiter",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/master/doc/docs/reference/Mirage/HeadlessFrameLimiter.md",tags:[],version:"current",frontMatter:{id:"HeadlessFrameLimiter",title:"HeadlessFrameLimiter"},sidebar:"api",previous:{title:"HeadlessAutoStart",permalink:"/Mirage/docs/reference/Mirage/HeadlessAutoStart"},next:{title:"IAuthenticatedObject",permalink:"/Mirage/docs/reference/Mirage/IAuthenticatedObject"}},c={},o=[{value:"Inheritance",id:"inheritance",level:5},{value:"Syntax",id:"syntax",level:5},{value:"Fields",id:"fields",level:3},{value:"serverTickRate",id:"servertickrate",level:4},{value:"Declaration",id:"declaration",level:5},{value:"Methods",id:"methods",level:3},{value:"Start()",id:"start",level:4},{value:"Declaration",id:"declaration-1",level:5}],d={toc:o};function m(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"class-headlessframelimiter"},"Class HeadlessFrameLimiter"),(0,n.kt)("div",{class:"inheritance"},(0,n.kt)("h5",{id:"inheritance"},"Inheritance"),(0,n.kt)("div",{class:"level",style:{"--data-index":0}},"System.Object")),(0,n.kt)("h5",{id:"syntax"},"Syntax"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public class HeadlessFrameLimiter : MonoBehaviour\n")),(0,n.kt)("h3",{id:"fields"},"Fields"),(0,n.kt)("h4",{id:"servertickrate"},"serverTickRate"),(0,n.kt)("p",null,"Server Update frequency, per second. Use around 60Hz for fast paced games like Counter-Strike to minimize latency. Use around 30Hz for games like WoW to minimize computations. Use around 1-10Hz for slow paced games like EVE."),(0,n.kt)("h5",{id:"declaration"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public int serverTickRate\n")),(0,n.kt)("h3",{id:"methods"},"Methods"),(0,n.kt)("h4",{id:"start"},"Start()"),(0,n.kt)("p",null,"Set the frame rate for a headless server."),(0,n.kt)("h5",{id:"declaration-1"},"Declaration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"public void Start()\n")))}m.isMDXComponent=!0}}]);