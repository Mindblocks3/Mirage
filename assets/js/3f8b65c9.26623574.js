"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[9846],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),d=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(a),m=r,g=u["".concat(c,".").concat(m)]||u[m]||p[m]||l;return a?n.createElement(g,i(i({ref:t},s),{},{components:a})):n.createElement(g,i({ref:t},s))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},23097:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const l={id:"INetworkSceneManager",title:"INetworkSceneManager"},i="Interface INetworkSceneManager",o={unversionedId:"reference/Mirage/INetworkSceneManager",id:"reference/Mirage/INetworkSceneManager",title:"INetworkSceneManager",description:"Syntax",source:"@site/docs/reference/Mirage/INetworkSceneManager.md",sourceDirName:"reference/Mirage",slug:"/reference/Mirage/INetworkSceneManager",permalink:"/Mirage/docs/reference/Mirage/INetworkSceneManager",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/master/doc/docs/reference/Mirage/INetworkSceneManager.md",tags:[],version:"current",frontMatter:{id:"INetworkSceneManager",title:"INetworkSceneManager"},sidebar:"api",previous:{title:"INetworkPlayer",permalink:"/Mirage/docs/reference/Mirage/INetworkPlayer"},next:{title:"INetworkServer",permalink:"/Mirage/docs/reference/Mirage/INetworkServer"}},c={},d=[{value:"Syntax",id:"syntax",level:5},{value:"Properties",id:"properties",level:3},{value:"OnClientStartedSceneChange",id:"onclientstartedscenechange",level:4},{value:"Declaration",id:"declaration",level:5},{value:"OnClientFinishedSceneChange",id:"onclientfinishedscenechange",level:4},{value:"Declaration",id:"declaration-1",level:5},{value:"OnServerStartedSceneChange",id:"onserverstartedscenechange",level:4},{value:"Declaration",id:"declaration-2",level:5},{value:"OnServerFinishedSceneChange",id:"onserverfinishedscenechange",level:4},{value:"Declaration",id:"declaration-3",level:5},{value:"OnPlayerSceneReady",id:"onplayersceneready",level:4},{value:"Declaration",id:"declaration-4",level:5},{value:"Methods",id:"methods",level:3},{value:"ServerLoadSceneNormal(String, Nullable&lt;LoadSceneParameters&gt;)",id:"serverloadscenenormalstring-nullableloadsceneparameters",level:4},{value:"Declaration",id:"declaration-5",level:5},{value:"Parameters",id:"parameters",level:5},{value:"ServerLoadSceneAdditively(String, IEnumerable&lt;INetworkPlayer&gt;, Boolean, Nullable&lt;LoadSceneParameters&gt;)",id:"serverloadsceneadditivelystring-ienumerableinetworkplayer-boolean-nullableloadsceneparameters",level:4},{value:"Declaration",id:"declaration-6",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:"ServerUnloadSceneAdditively(Scene, IEnumerable&lt;INetworkPlayer&gt;)",id:"serverunloadsceneadditivelyscene-ienumerableinetworkplayer",level:4},{value:"Declaration",id:"declaration-7",level:5},{value:"Parameters",id:"parameters-2",level:5}],s={toc:d};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"interface-inetworkscenemanager"},"Interface INetworkSceneManager"),(0,r.kt)("h5",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public interface INetworkSceneManager\n")),(0,r.kt)("h3",{id:"properties"},"Properties"),(0,r.kt)("h4",{id:"onclientstartedscenechange"},"OnClientStartedSceneChange"),(0,r.kt)("p",null,"Event fires when the Client starts changing scene."),(0,r.kt)("h5",{id:"declaration"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"SceneChangeStartedEvent OnClientStartedSceneChange { get; }\n")),(0,r.kt)("h4",{id:"onclientfinishedscenechange"},"OnClientFinishedSceneChange"),(0,r.kt)("p",null,"Event fires after the Client has completed its scene change."),(0,r.kt)("h5",{id:"declaration-1"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"SceneChangeFinishedEvent OnClientFinishedSceneChange { get; }\n")),(0,r.kt)("h4",{id:"onserverstartedscenechange"},"OnServerStartedSceneChange"),(0,r.kt)("p",null,"Event fires before Server changes scene."),(0,r.kt)("h5",{id:"declaration-2"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"SceneChangeStartedEvent OnServerStartedSceneChange { get; }\n")),(0,r.kt)("h4",{id:"onserverfinishedscenechange"},"OnServerFinishedSceneChange"),(0,r.kt)("p",null,"Event fires after Server has completed scene change."),(0,r.kt)("h5",{id:"declaration-3"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"SceneChangeFinishedEvent OnServerFinishedSceneChange { get; }\n")),(0,r.kt)("h4",{id:"onplayersceneready"},"OnPlayerSceneReady"),(0,r.kt)("p",null,"Event fires On the server, after Client sends  to the server"),(0,r.kt)("h5",{id:"declaration-4"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"PlayerSceneChangeEvent OnPlayerSceneReady { get; }\n")),(0,r.kt)("h3",{id:"methods"},"Methods"),(0,r.kt)("h4",{id:"serverloadscenenormalstring-nullableloadsceneparameters"},"ServerLoadSceneNormal(String, Nullable","<","LoadSceneParameters",">",")"),(0,r.kt)("p",null,"Allows server to fully load in a new scene and override current active scene."),(0,r.kt)("h5",{id:"declaration-5"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"void ServerLoadSceneNormal(string scenePath, LoadSceneParameters? sceneLoadParameters = default(LoadSceneParameters? ))\n")),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"System.String"),(0,r.kt)("td",{parentName:"tr",align:null},"scenePath"),(0,r.kt)("td",{parentName:"tr",align:null},"The full path to the scene file or the name of the scene.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"System.Nullable","<","LoadSceneParameters",">"),(0,r.kt)("td",{parentName:"tr",align:null},"sceneLoadParameters"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h4",{id:"serverloadsceneadditivelystring-ienumerableinetworkplayer-boolean-nullableloadsceneparameters"},"ServerLoadSceneAdditively(String, IEnumerable","<","INetworkPlayer",">",", Boolean, Nullable","<","LoadSceneParameters",">",")"),(0,r.kt)("p",null,"Allows server to fully load in another scene on top of current active scene."),(0,r.kt)("h5",{id:"declaration-6"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"void ServerLoadSceneAdditively(string scenePath, IEnumerable<INetworkPlayer> players, bool shouldClientLoadNormally = false, LoadSceneParameters? sceneLoadParameters = default(LoadSceneParameters? ))\n")),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"System.String"),(0,r.kt)("td",{parentName:"tr",align:null},"scenePath"),(0,r.kt)("td",{parentName:"tr",align:null},"The full path to the scene file or the name of the scene.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"System.Collections.Generic.IEnumerable","<","Mirage.INetworkPlayer",">"),(0,r.kt)("td",{parentName:"tr",align:null},"players"),(0,r.kt)("td",{parentName:"tr",align:null},"List of player","'","s that are receiving the new scene load.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"System.Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"shouldClientLoadNormally"),(0,r.kt)("td",{parentName:"tr",align:null},"Should the clients load this additively too or load it full normal scene change.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"System.Nullable","<","LoadSceneParameters",">"),(0,r.kt)("td",{parentName:"tr",align:null},"sceneLoadParameters"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h4",{id:"serverunloadsceneadditivelyscene-ienumerableinetworkplayer"},"ServerUnloadSceneAdditively(Scene, IEnumerable","<","INetworkPlayer",">",")"),(0,r.kt)("p",null,"Allows server to fully unload a scene additively."),(0,r.kt)("h5",{id:"declaration-7"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"void ServerUnloadSceneAdditively(Scene scene, IEnumerable<INetworkPlayer> players)\n")),(0,r.kt)("h5",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Scene"),(0,r.kt)("td",{parentName:"tr",align:null},"scene"),(0,r.kt)("td",{parentName:"tr",align:null},"The scene handle which we want to unload additively.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"System.Collections.Generic.IEnumerable","<","Mirage.INetworkPlayer",">"),(0,r.kt)("td",{parentName:"tr",align:null},"players"),(0,r.kt)("td",{parentName:"tr",align:null},"List of player","'","s that are receiving the new scene unload.")))))}p.isMDXComponent=!0}}]);