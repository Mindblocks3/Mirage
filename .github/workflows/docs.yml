name: Docs

on: [push]

jobs:
  build_doc:

    runs-on: ubuntu-20.04
    # available list of containers here:
    # https://hub.docker.com/r/unityci/editor/tags?page=1&ordering=last_updated&name=ubuntu-2020.1.17f1-base
    container: unityci/editor:ubuntu-2021.3.4f1-base-1.0.1
    env:
      DOTNET_ROOT: '/opt/unity/Editor/Data/NetCoreRuntime'
    steps:
      - name: Activate unity
        # exit code is 1 for manual activation
        continue-on-error: true
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2021_3_4 }}
        run: |          
          echo "$UNITY_LICENSE" | tr -d '\r' > UnityLicenseFile.ulf
          unity-editor -nographics -logFile /dev/stdout -manualLicenseFile UnityLicenseFile.ulf -quit

      - uses: actions/checkout@v1

      - name: Cache Library
        id: cache-library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-Library-2021.3.4

      - name: Generate Solution
        run: unity-editor -nographics -logFile /dev/stdout -customBuildName Mirage -projectPath . -executeMethod Mirage.EditorScripts.GenerateSolutionFiles.CreateSolution -quit

      - name: list
        run: ls -la

      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: |
            *.sln
            *.csproj
      
      # unity 2020.3 outputs <ReferenceOutputAssembly>false</ReferenceOutputAssembly> on linux
      # this breaks references to other csproj for docfx and sonar.
      # This step is a work around for this so docfx runs in correctly
      # replacing false with true in ReferenceOutputAssembly
      - name: Fix Csproj
        run: sed -i 's/<ReferenceOutputAssembly>false<\/ReferenceOutputAssembly>/<ReferenceOutputAssembly>true<\/ReferenceOutputAssembly>/g' *.csproj

      # need to update so that docfx setup finds files correctly
      - name: apt update
        run: apt update
        
      - name: Install mono
        shell: bash
        run: |
          apt-get install -y gnupg ca-certificates
          apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
          echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | tee /etc/apt/sources.list.d/mono-official-stable.list
          apt-get update
          apt-get install -y mono-complete 
      
      - name: Install NuGet
        shell: bash
        run: |
          wget https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
          mono nuget.exe install
      
      - name: Install docfx
        shell: bash
        run: |
          apt-get install -y unzip
          wget https://github.com/dotnet/docfx/releases/download/v2.56.6/docfx.zip
          unzip docfx.zip -d /usr/local/docfx
          rm -rf docfx.zip
      - name: Create script
        shell: bash
        run: |
          echo 'mono /usr/local/docfx/docfx.exe $@' | tee /usr/local/bin/docfx
          chmod ugo+x /usr/local/bin/docfx
      


      # - run: apt-get -y install tree
      # - run: tree /opt/unity/Editor/data

      # Option 2 https://stackoverflow.com/a/43636597/8479976


      - name: Generate API 
        run: docfx metadata --logLevel Warning --warningsAsErrors doc/docfx.json

      - name: Build Docs
        run: docfx build --logLevel Warning --warningsAsErrors doc/docfx.json

      - name: Publish docs
        uses: crazy-max/ghaction-github-pages@v2.6.0
        if: github.ref == 'refs/heads/master'
        with:
          # Create incremental commit instead of doing push force
          keep_history: true
          # Allow an empty commit to be created
          allow_empty_commit: true
          jekyll: false
          # Build directory to deploy
          build_dir: doc/_site
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
