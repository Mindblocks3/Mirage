name: CI
#on:
#  pull_request: {}
#  push: { branches: [master] }

on:
  push:
    paths-ignore:
      - 'doc/**'
      - '*.md'

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  Tests2022:
    name: Test 2022
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Library
        id: cache-library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-2022.1.20

      # note v3.1.0 is broken, it has the wrong image
      - uses: game-ci/unity-test-runner@c80d909
        id: tests

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test Results
          path: ${{ steps.tests.outputs.artifactsPath }}
          retention-days: 1

  BuildIL2CPP:
    name: BuildIL2CPP
    runs-on: ubuntu-latest
    # available list of containers here:
    # https://hub.docker.com/r/unityci/editor/tags?page=1&ordering=last_updated&name=ubuntu-2020.1.17f1-base

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Library
        id: cache-library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-build

      # Note v3.1.0 is broken, uses the wrong image
      - uses: game-ci/unity-builder@7afabe7
        with:
          targetPlatform: StandaloneLinux64
          customParameters: -nographics

  Publish:
    # only run once both tests and il2cpp have passed
    needs: [Tests2022, BuildIL2CPP]
    # only run on master
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
