name: CI
#on:
#  pull_request: {}
#  push: { branches: [master] }

on: 
  push:
    paths-ignore:
      - 'doc/**'
      - '*.md'

jobs:
  Tests2022:
    name: Test 2022
    runs-on: ubuntu-latest
        
    steps:
     
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Library
        id: cache-library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-2022.1.20

      - uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
    
  BuildIL2CPP:
    name: BuildIL2CPP
    runs-on: ubuntu-latest
    # available list of containers here:
    # https://hub.docker.com/r/unityci/editor/tags?page=1&ordering=last_updated&name=ubuntu-2020.1.17f1-base
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Library
        id: cache-library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-build

      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneLinux64

  Publish:
    # only run once both tests and il2cpp have passed
    needs: [Tests2022, BuildIL2CPP]
    # only run on master
    if: github.ref == 'refs/heads/master'
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # upload next version so that sonar job can use it
      - run: echo ${{ steps.semantic.outputs.new_release_version }} > SemanticVersion.txt
      - name: Archive Version
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: SemanticVersion
          path: SemanticVersion.txt

